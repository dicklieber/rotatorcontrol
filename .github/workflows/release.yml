name: Build for Release

on: workflow_dispatch
#on:
#  push:
#    branches: [ release/* ]

env:
  pkg-assembly: 'rotatorcontrol.jar'
  pkg-name: 'rotatorcontrol'
  pkg-version: '1.0.1'
  gh-version: 'v1.0.1'
  pkg-mainclass: "com.wa9nnn.rotator.RotatorControl"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token

jobs:
  fat:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.version.output.text}}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 14
      - name: Build fat jar
        run: sbt "release with-defaults"

      - name: View artifacts
        run: ls target/result

      - name: Get version from file
        id: version
        uses: pCYSl5EDgo/cat@master
        with:
          path: target/result/version.txt

      - name: show version from step
#        run: echo WFT
        run: |
          echo xyzzy
          echo "xyzzy"
          echo ${{steps.version.output}}
#        run: echo "step: ${{steps.version.output}}"

#      - name: Dump context
#        uses: crazy-max/ghaction-dump-context@v1

      - name: Upload fat jar
        uses: actions/upload-artifact@v1
        with:
          name: jars
          path: target/result/rotatorcontrol.jar

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.gh-version }}
          release_name: Release ${{ env.pkg-name }}
          draft: false
          prerelease: false


  xyzzy:
    needs: fat
    runs-on: [ windows-latest ]
    steps:
      - name: look at version
        run: echo ${{needs.fat.outputs.version}}

  windows:
    needs: fat
    runs-on: [ windows-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'liberica'
          java-version: '17'
          java-package: jdk+fx
          architecture: x64
      - name: Download fat jar
        uses: actions/download-artifact@v1
        with:
          name: jars
      - name: Package jar as msi
        run: "jpackage --name ${{ env.pkg-name }} -i jars --main-class ${{env.pkg-mainclass}} --main-jar ${{ env.pkg-assembly }} --app-version ${{env.pkg-version}} --dest target/windows --win-dir-chooser"
      - name: View artifacts
        run: dir target\windows
      - name: Upload installer Asset
        run: "gh release upload ${{env.gh-version}} target/windows/rotatorcontrol-${{env.pkg-version}}.exe"

  osx:
    needs: fat
    runs-on: [ macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'liberica'
          java-version: '17'
          java-package: jdk+fx
          architecture: x64
      - name: Download fat jar
        uses: actions/download-artifact@v1
        with:
          name: jars
      - name: Package jar as dmg installer
        run: "jpackage --name ${{ env.pkg-name }} -i jars --main-class ${{env.pkg-mainclass}} --app-version ${{env.pkg-version}} --main-jar ${{ env.pkg-assembly }} --dest target/macos"
      - name: View artifacts
        run: ls target/macos
      - name: Upload installer Asset
        run: "gh release upload ${{env.gh-version}} target/macos/rotatorcontrol-${{env.pkg-version}}.dmg"

  linux:
    needs: fat
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'liberica'
          java-version: '17'
          java-package: jdk+fx
          architecture: x64
      - name: Download fat jar
        uses: actions/download-artifact@v1
        with:
          name: jars
      - name: Package jar as debian package
        run: "jpackage --name ${{ env.pkg-name }} -i jars --main-class ${{env.pkg-mainclass}} --app-version ${{env.pkg-version}} --main-jar ${{ env.pkg-assembly }} --dest target/deb"
      - name: View artifacts
        run: ls target/deb
      - name: Upload installer Asset
        run: "gh release upload ${{env.gh-version}} target/deb/rotatorcontrol_${{env.pkg-version}}-1_amd64.deb"

