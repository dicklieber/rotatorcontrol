name: Build for Release

on: workflow_dispatch
#on:
#  push:
#    branches: [ release/* ]

env:
  pkg-assembly: 'rotatorcontrol.jar'
  pkg-name: 'rotatorcontrol'
  #  pkg-version: '1.0.1'
  #  gh-version: 'v1.0.1'
  pkg-mainclass: "com.wa9nnn.rotator.RotatorControl"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token

jobs:
  fat:
    runs-on: ubuntu-latest
    outputs:
      appVersion: ${{steps.relVersion.outputs.version}}
      ghVersion: "v${{steps.relVersion.outputs.version}}"
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 14

      - name: Build fat jar
        run: sbt "release with-defaults"

      - name: View artifacts
        run: ls target/result

      - name: Get version from file
        id: relVersion
        run: echo "version=$(cat target/result/version.txt)" >> $GITHUB_OUTPUT

      - name: show version from step
        run: echo b4 ${{steps.relVersion.outputs.version}} after


      - name: Upload fat jar
        uses: actions/upload-artifact@v3
        with:
          name: jars
          path: target/result/rotatorcontrol.jar

  release:
    needs: fat
    runs-on: [ windows-latest ]

    steps:
      - name: look at versions from fat
        run: |
          echo appVersion: ${{needs.fat.outputs.appVersion}}
          echo ghVersion: ${{needs.fat.outputs.ghVersion}}

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{needs.fat.outputs.ghVersion}}
          release_name: Release ${{ env.pkg-name }}
          draft: false
          prerelease: false

      - name: Download fat jar
        uses: actions/download-artifact@v1
        with:
          name: jars

      - run: ls


  windows:
    needs: release
    runs-on: [ windows-latest ]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: 'liberica'
          java-version: '17'
          java-package: jdk+fx
          architecture: x64

      - name: Download fat jar
        uses: actions/download-artifact@v1
        with:
          name: jars

      - name: Package jar as msi
        run: "jpackage --name ${{ env.pkg-name }} -i jars --main-class ${{env.pkg-mainclass}} --main-jar ${{ env.pkg-assembly }} --app-version ${{needs.fat.outputs.appVersion}} --win-dir-chooser"

      - name: View artifacts
        run: dir

      - name: Upload installer Asset
        run: "gh release upload ${{needs.fat.outputs.ghVersion}} rotatorcontrol-${{env.pkg-version}}.exe"

  osx:
    needs: release
    runs-on: [ macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'liberica'
          java-version: '17'
          java-package: jdk+fx
          architecture: x64
      - name: Download fat jar
        uses: actions/download-artifact@v1
        with:
          name: jars
      - name: Package jar as dmg installer
        run: "jpackage --name ${{ env.pkg-name }} -i jars --main-class ${{env.pkg-mainclass}} --app-version ${{needs.fat.outputs.appVersion}} --main-jar ${{ env.pkg-assembly }} --dest target/macos"
      - name: View artifacts
        run: ls target/macos
      - name: Upload installer Asset
        run: "gh release upload ${{needs.fat.outputs.ghVersion}} target/macos/rotatorcontrol-${{needs.fat.outputs.appVersion}}.dmg"

  linux:
    needs: release
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'liberica'
          java-version: '17'
          java-package: jdk+fx
          architecture: x64
      - name: Download fat jar
        uses: actions/download-artifact@v1
        with:
          name: jars
      - name: Package jar as debian package
        run: "jpackage --name ${{ env.pkg-name }} -i jars --main-class ${{env.pkg-mainclass}} --app-version ${{needs.fat.outputs.appVersion}} --main-jar ${{ env.pkg-assembly }} --dest target/deb"
      - name: View artifacts
        run: ls target/deb
      - name: Upload installer Asset
        run: "gh release upload ${{needs.fat.outputs.ghVersion}} target/deb/rotatorcontrol_${{env.pkg-version}}-1_amd64.deb"

